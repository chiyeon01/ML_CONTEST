{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyM47PY8sddMb1NSLOgC7i8P",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/chiyeon01/ML_CONTEST/blob/main/DACON/%EC%B1%84%EB%AC%B4%20%EB%B6%88%EC%9D%B4%ED%96%89%20%EC%97%AC%EB%B6%80%20%EC%98%88%EC%B8%A1%20%ED%95%B4%EC%BB%A4%ED%86%A4%3A%20%EB%B6%88%EC%9D%B4%ED%96%89%EC%9D%98%20%EC%A7%95%ED%9B%84%EB%A5%BC%20%EC%B0%BE%EC%95%84%EB%9D%BC!\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Google Drive 연동"
      ],
      "metadata": {
        "id": "EZLBCPWNos_y"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lc_eETE7oUgN",
        "outputId": "bed86a9e-5c08-4ba5-9a23-73e15cbcff2f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/gdrive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount(\"/content/gdrive\")"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Module Import"
      ],
      "metadata": {
        "id": "iZzNdbIcow2g"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "from xgboost import XGBClassifier\n",
        "from lightgbm import LGBMClassifier\n",
        "\n",
        "from sklearn.metrics import accuracy_score, f1_score"
      ],
      "metadata": {
        "id": "GPHTzd3xonWy"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Data Load"
      ],
      "metadata": {
        "id": "CktTuorbo7eA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Dataset Info.\n",
        "\n",
        "---\n",
        "\n",
        "### train dataset\n",
        "\n",
        "* ID : 샘플별 고유 ID\n",
        "\n",
        "* withdrawal : (TARGET) 철회 여부(0 - 철회하지 않음, 1 - 철회함)\n",
        "\n",
        "* ~generation : BDA 기수~\n",
        "\n",
        "* school1 : 대학교\n",
        "\n",
        "* major type : 복수전공 여부\n",
        "\n",
        "* major1_1 : 제1전공\n",
        "\n",
        "* major1_2 : 제2전공\n",
        "\n",
        "* major_data : 제1전공 전공자 여부\n",
        "\n",
        "* job : 현재 직무\n",
        "\n",
        "* class1~4 : 수강 분반\n",
        "\n",
        "* re_registration : 학기당 새로운 학회원을 모집할 때 재등록 여부\n",
        "\n",
        "* contest_award : 공모전 수상 경력\n",
        "\n",
        "* nationality : 내/외국인 여부\n",
        "\n",
        "* inflow_route : 유입 경로\n",
        "\n",
        "* whyBDA : BDA를 선택한 이유\n",
        "\n",
        "* what_to_gain : BDA에서 얻고싶은 것\n",
        "\n",
        "* hope_for_group : 조별활동 희망 여부\n",
        "\n",
        "* previous_class_3~7 : 각 기수를 수강했을 시 분반\n",
        "\n",
        "* major_field : 전공 분야\n",
        "\n",
        "* desired_career_path : 희망 진로\n",
        "\n",
        "* completed_semester : 대학교 이수학기\n",
        "\n",
        "* project_type : 팀/개인 중 프로젝트에 참여하고 싶은 형태\n",
        "\n",
        "* time_input : 하루에 BDA에 투입 가능한 시간\n",
        "\n",
        "* desired_job : 희망 직무\n",
        "\n",
        "* certificate_acquisition : 취득한 자격증\n",
        "\n",
        "* desired_certificate : 취득을 희망하는 자격증\n",
        "\n",
        "* certificate_study_period : 원하는 자격증 스터디 기간\n",
        "\n",
        "* desired_job_except_data : 데이터 외 희망 직무\n",
        "\n",
        "* incumbents_level : 어느 정도 연차의 현직자를 원하는지\n",
        "\n",
        "* incumbents_lecture : 어떤 주제의 현직자 강의를 원하는지\n",
        "\n",
        "* incumbents_company_level : 강연 현직자가 어느정도 규모의 회사를 다니는\n",
        "사람이었으면 좋겠는지\n",
        "\n",
        "* incumbents_lecture_type : 온, 오프라인 중 원하는 현직자 강연 형태\n",
        "\n",
        "* incumbents_lecture_scale : 원하는 현직자 강의 규모\n",
        "\n",
        "* incumbents_lecture_scale_reason : 현직자 강의 규모 선택 이유\n",
        "\n",
        "* interested_company : 관심있는 기업명\n",
        "\n",
        "* expected_domain : 희망하는 도메인\n",
        "\n",
        "* contest_participitation : 데이터 관련 대회 경험\n",
        "\n",
        "* idea_contest : 아이디어 공모전에 대한 경험\n",
        "\n",
        "* onedayclass_topic : 원데이 클래스 주제\n",
        "<br/>\n",
        "\n",
        "---\n",
        "\n",
        "### test dataset\n",
        "* ID : 샘플별 고유 ID\n",
        "\n",
        "withdrawal 칼럼 존재하지 않음.(target data)\n",
        "\n",
        "그 외 train.csv 파일과 구성 동일\n",
        "<br/>\n",
        "\n",
        "---\n",
        "\n",
        "### submit dataset\n",
        "* ID : 샘플별 고유 ID\n",
        "\n",
        "withdrawal : (TARGET) 철회 여부(0, 1)"
      ],
      "metadata": {
        "id": "i_x2u6G3pa3C"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!unzip \"/content/gdrive/MyDrive/Colab Notebooks/z.대회 & 프로젝트/데이콘 x BDA 학습자 수료 예측 AI 경진대회_DACON/open.zip\""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sVGWMK3Fo5l5",
        "outputId": "b7830ed4-76e3-42e4-eff8-6711c8651fab"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  /content/gdrive/MyDrive/Colab Notebooks/z.대회 & 프로젝트/데이콘 x BDA 학습자 수료 예측 AI 경진대회_DACON/open.zip\n",
            "  inflating: train.csv               \n",
            "  inflating: sample_submission.csv   \n",
            "  inflating: test.csv                \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_df = pd.read_csv(\"/content/train.csv\")\n",
        "test_df = pd.read_csv(\"/content/test.csv\")\n",
        "submit_df = pd.read_csv(\"/content/sample_submission.csv\")"
      ],
      "metadata": {
        "id": "aecQ3g0rpFPi"
      },
      "execution_count": 126,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# EDA"
      ],
      "metadata": {
        "id": "d8tDrTMNrt_t"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "train_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 585
        },
        "id": "Pq73LNTupVMH",
        "outputId": "e755cfe8-ed67-4d0d-ec22-07760e3f2961"
      },
      "execution_count": 127,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           ID  generation                                            school1  \\\n",
              "0  TRAIN_0000           8  3e0057be3ecde495d1d6aab0bdc3092cce94440a6a4f68...   \n",
              "1  TRAIN_0001           8  c7c76d1a4c9d719d17c899a3ca9de153452a22163fe083...   \n",
              "2  TRAIN_0002           8  1ed9296bd2a05ea36fabb5171a003b7320bb21a53d6135...   \n",
              "3  TRAIN_0003           8  5ec50ef5a0c0416652f8d67a89ef4c02eb0c6a61b5d0a8...   \n",
              "4  TRAIN_0004           8  c7c76d1a4c9d719d17c899a3ca9de153452a22163fe083...   \n",
              "\n",
              "                major type       major1_1       major1_2  major_data  job  \\\n",
              "0                    단일 전공  IT(컴퓨터 공학 포함)            NaN       False  대학생   \n",
              "1  복수 전공 ( 다중전공, 이중전공 포함 )  IT(컴퓨터 공학 포함)  IT(컴퓨터 공학 포함)       False  대학생   \n",
              "2                    단일 전공  IT(컴퓨터 공학 포함)            NaN        True  대학생   \n",
              "3                    단일 전공  IT(컴퓨터 공학 포함)            NaN        True  대학생   \n",
              "4  복수 전공 ( 다중전공, 이중전공 포함 )  IT(컴퓨터 공학 포함)  IT(컴퓨터 공학 포함)       False  대학생   \n",
              "\n",
              "   class1  class2  ...   incumbents_company_level  incumbents_lecture_type  \\\n",
              "0       4     NaN  ...  국내 대기업 IT 계열 (금융, 제조 ...)                온,오프라인 동시   \n",
              "1       4     NaN  ...     국내 빅테크 IT 계열 (네카쿠라배당토)                온,오프라인 동시   \n",
              "2       4     NaN  ...  국내 대기업 IT 계열 (금융, 제조 ...)                온,오프라인 동시   \n",
              "3       7     NaN  ...     국내 빅테크 IT 계열 (네카쿠라배당토)                온,오프라인 동시   \n",
              "4       7     NaN  ...  국내 대기업 IT 계열 (금융, 제조 ...)                     오프라인   \n",
              "\n",
              "    incumbents_lecture_scale           incumbents_lecture_scale_reason  \\\n",
              "0  3~50명 내외의 강의 리스너와 1명의 현직자                인원이 너무 많지 않아야 편하게 들을 수 있어서   \n",
              "1    10명 내외의 강의 리스너와 1명의 현직자                인원이 적어야 집중할 수 있고 질문 하기 쉽다.   \n",
              "2  3~50명 내외의 강의 리스너와 1명의 현직자  너무 소수인원은 조금 부담스럽고 너무 많은 인원은 집중도가 떨어질거같아서   \n",
              "3  3~50명 내외의 강의 리스너와 1명의 현직자          너무 많은 인원이 있을 경우 집중도가 떨어질 거 같습니다.   \n",
              "4  100명 이상의 리스너와 10명 이상의 현직자                      많은 현직자분들의 이야기를 듣고싶어서   \n",
              "\n",
              "  interested_company expected_domain  \\\n",
              "0          삼성이나 하이닉스              AI   \n",
              "1                네이버              AI   \n",
              "2           스포츠분석 기업              AI   \n",
              "3                 토스              AI   \n",
              "4            네이버 카카오              금융   \n",
              "\n",
              "                             contest_participitation idea_contest  \\\n",
              "0                                                NaN          NaN   \n",
              "1                                                NaN          NaN   \n",
              "2  139ac02d03d83f839197195e65bc1810ef5282ade32d80...          NaN   \n",
              "3                                                NaN          NaN   \n",
              "4                                                NaN          NaN   \n",
              "\n",
              "  onedayclass_topic withdrawal  \n",
              "0            C++ 응용          1  \n",
              "1                 .          1  \n",
              "2            C언어 기초          1  \n",
              "3         현직자의 취업과정          0  \n",
              "4               C언어          1  \n",
              "\n",
              "[5 rows x 46 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-38640f0c-a98d-4ed2-8b62-c3807986dd27\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>generation</th>\n",
              "      <th>school1</th>\n",
              "      <th>major type</th>\n",
              "      <th>major1_1</th>\n",
              "      <th>major1_2</th>\n",
              "      <th>major_data</th>\n",
              "      <th>job</th>\n",
              "      <th>class1</th>\n",
              "      <th>class2</th>\n",
              "      <th>...</th>\n",
              "      <th>incumbents_company_level</th>\n",
              "      <th>incumbents_lecture_type</th>\n",
              "      <th>incumbents_lecture_scale</th>\n",
              "      <th>incumbents_lecture_scale_reason</th>\n",
              "      <th>interested_company</th>\n",
              "      <th>expected_domain</th>\n",
              "      <th>contest_participitation</th>\n",
              "      <th>idea_contest</th>\n",
              "      <th>onedayclass_topic</th>\n",
              "      <th>withdrawal</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>TRAIN_0000</td>\n",
              "      <td>8</td>\n",
              "      <td>3e0057be3ecde495d1d6aab0bdc3092cce94440a6a4f68...</td>\n",
              "      <td>단일 전공</td>\n",
              "      <td>IT(컴퓨터 공학 포함)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>대학생</td>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>국내 대기업 IT 계열 (금융, 제조 ...)</td>\n",
              "      <td>온,오프라인 동시</td>\n",
              "      <td>3~50명 내외의 강의 리스너와 1명의 현직자</td>\n",
              "      <td>인원이 너무 많지 않아야 편하게 들을 수 있어서</td>\n",
              "      <td>삼성이나 하이닉스</td>\n",
              "      <td>AI</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>C++ 응용</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>TRAIN_0001</td>\n",
              "      <td>8</td>\n",
              "      <td>c7c76d1a4c9d719d17c899a3ca9de153452a22163fe083...</td>\n",
              "      <td>복수 전공 ( 다중전공, 이중전공 포함 )</td>\n",
              "      <td>IT(컴퓨터 공학 포함)</td>\n",
              "      <td>IT(컴퓨터 공학 포함)</td>\n",
              "      <td>False</td>\n",
              "      <td>대학생</td>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>국내 빅테크 IT 계열 (네카쿠라배당토)</td>\n",
              "      <td>온,오프라인 동시</td>\n",
              "      <td>10명 내외의 강의 리스너와 1명의 현직자</td>\n",
              "      <td>인원이 적어야 집중할 수 있고 질문 하기 쉽다.</td>\n",
              "      <td>네이버</td>\n",
              "      <td>AI</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>.</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>TRAIN_0002</td>\n",
              "      <td>8</td>\n",
              "      <td>1ed9296bd2a05ea36fabb5171a003b7320bb21a53d6135...</td>\n",
              "      <td>단일 전공</td>\n",
              "      <td>IT(컴퓨터 공학 포함)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>대학생</td>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>국내 대기업 IT 계열 (금융, 제조 ...)</td>\n",
              "      <td>온,오프라인 동시</td>\n",
              "      <td>3~50명 내외의 강의 리스너와 1명의 현직자</td>\n",
              "      <td>너무 소수인원은 조금 부담스럽고 너무 많은 인원은 집중도가 떨어질거같아서</td>\n",
              "      <td>스포츠분석 기업</td>\n",
              "      <td>AI</td>\n",
              "      <td>139ac02d03d83f839197195e65bc1810ef5282ade32d80...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>C언어 기초</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>TRAIN_0003</td>\n",
              "      <td>8</td>\n",
              "      <td>5ec50ef5a0c0416652f8d67a89ef4c02eb0c6a61b5d0a8...</td>\n",
              "      <td>단일 전공</td>\n",
              "      <td>IT(컴퓨터 공학 포함)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>대학생</td>\n",
              "      <td>7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>국내 빅테크 IT 계열 (네카쿠라배당토)</td>\n",
              "      <td>온,오프라인 동시</td>\n",
              "      <td>3~50명 내외의 강의 리스너와 1명의 현직자</td>\n",
              "      <td>너무 많은 인원이 있을 경우 집중도가 떨어질 거 같습니다.</td>\n",
              "      <td>토스</td>\n",
              "      <td>AI</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>현직자의 취업과정</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>TRAIN_0004</td>\n",
              "      <td>8</td>\n",
              "      <td>c7c76d1a4c9d719d17c899a3ca9de153452a22163fe083...</td>\n",
              "      <td>복수 전공 ( 다중전공, 이중전공 포함 )</td>\n",
              "      <td>IT(컴퓨터 공학 포함)</td>\n",
              "      <td>IT(컴퓨터 공학 포함)</td>\n",
              "      <td>False</td>\n",
              "      <td>대학생</td>\n",
              "      <td>7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>국내 대기업 IT 계열 (금융, 제조 ...)</td>\n",
              "      <td>오프라인</td>\n",
              "      <td>100명 이상의 리스너와 10명 이상의 현직자</td>\n",
              "      <td>많은 현직자분들의 이야기를 듣고싶어서</td>\n",
              "      <td>네이버 카카오</td>\n",
              "      <td>금융</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>C언어</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 46 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38640f0c-a98d-4ed2-8b62-c3807986dd27')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-38640f0c-a98d-4ed2-8b62-c3807986dd27 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-38640f0c-a98d-4ed2-8b62-c3807986dd27');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-d14e0e37-3388-4115-a11b-c21c2b86e0e3\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d14e0e37-3388-4115-a11b-c21c2b86e0e3')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-d14e0e37-3388-4115-a11b-c21c2b86e0e3 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "train_df"
            }
          },
          "metadata": {},
          "execution_count": 127
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NqdkP97RpWHi",
        "outputId": "660b5585-0f41-4bc3-ace3-3db87b46f17d"
      },
      "execution_count": 128,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1056 entries, 0 to 1055\n",
            "Data columns (total 46 columns):\n",
            " #   Column                           Non-Null Count  Dtype  \n",
            "---  ------                           --------------  -----  \n",
            " 0   ID                               1056 non-null   object \n",
            " 1   generation                       1056 non-null   int64  \n",
            " 2   school1                          1056 non-null   object \n",
            " 3   major type                       1049 non-null   object \n",
            " 4   major1_1                         1051 non-null   object \n",
            " 5   major1_2                         493 non-null    object \n",
            " 6   major_data                       1056 non-null   bool   \n",
            " 7   job                              1056 non-null   object \n",
            " 8   class1                           1056 non-null   int64  \n",
            " 9   class2                           101 non-null    float64\n",
            " 10  class3                           2 non-null      float64\n",
            " 11  class4                           1 non-null      float64\n",
            " 12  re_registration                  1056 non-null   object \n",
            " 13  contest_award                    11 non-null     object \n",
            " 14  nationality                      1056 non-null   object \n",
            " 15  inflow_route                     1056 non-null   object \n",
            " 16  whyBDA                           1056 non-null   object \n",
            " 17  what_to_gain                     1045 non-null   object \n",
            " 18  hope_for_group                   1045 non-null   object \n",
            " 19  previous_class_3                 173 non-null    object \n",
            " 20  previous_class_4                 172 non-null    object \n",
            " 21  previous_class_5                 172 non-null    object \n",
            " 22  previous_class_6                 174 non-null    object \n",
            " 23  previous_class_7                 174 non-null    object \n",
            " 24  major_field                      1048 non-null   object \n",
            " 25  desired_career_path              1045 non-null   object \n",
            " 26  completed_semester               972 non-null    object \n",
            " 27  project_type                     1045 non-null   object \n",
            " 28  time_input                       1056 non-null   float64\n",
            " 29  desired_job                      1045 non-null   object \n",
            " 30  certificate_acquisition          1056 non-null   object \n",
            " 31  desired_certificate              1045 non-null   object \n",
            " 32  certificate_study_period         1045 non-null   object \n",
            " 33  desired_job_except_data          1045 non-null   object \n",
            " 34  incumbents_level                 1045 non-null   object \n",
            " 35  incumbents_lecture               1045 non-null   object \n",
            " 36  incumbents_company_level         1045 non-null   object \n",
            " 37  incumbents_lecture_type          1045 non-null   object \n",
            " 38  incumbents_lecture_scale         1045 non-null   object \n",
            " 39  incumbents_lecture_scale_reason  1044 non-null   object \n",
            " 40  interested_company               1045 non-null   object \n",
            " 41  expected_domain                  1045 non-null   object \n",
            " 42  contest_participitation          194 non-null    object \n",
            " 43  idea_contest                     11 non-null     object \n",
            " 44  onedayclass_topic                1041 non-null   object \n",
            " 45  withdrawal                       1056 non-null   int64  \n",
            "dtypes: bool(1), float64(4), int64(3), object(38)\n",
            "memory usage: 372.4+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "full_df = pd.concat([train_df, test_df], axis=0)"
      ],
      "metadata": {
        "id": "b9ih7iFXqzQd"
      },
      "execution_count": 129,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "full_df.drop([\"ID\", \"generation\"], axis=1, inplace=True)"
      ],
      "metadata": {
        "id": "ELWcLNv_tZyG"
      },
      "execution_count": 130,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "full_df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_jVBMBzltw4H",
        "outputId": "1dea979b-947e-4574-c8f3-57336fdee6d0"
      },
      "execution_count": 131,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1844, 35)"
            ]
          },
          "metadata": {},
          "execution_count": 131
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Preprocessing"
      ],
      "metadata": {
        "id": "2aJGE-Tpuib9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "object_columns = (full_df.dtypes == \"object\").index.tolist()"
      ],
      "metadata": {
        "id": "UpMSTg1rvM6E"
      },
      "execution_count": 132,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for object_column in object_columns:\n",
        "\n",
        "    if object_column == \"completed_semester\":\n",
        "        continue\n",
        "\n",
        "    label_encoder = LabelEncoder()\n",
        "    full_df[object_column] = label_encoder.fit_transform(full_df[object_column])\n",
        ""
      ],
      "metadata": {
        "id": "m0ZtXoaNuqZE"
      },
      "execution_count": 133,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "full_df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "C5-r1eLCvhIq",
        "outputId": "1efc9b40-f85a-4f1b-db53-61ab863877e0"
      },
      "execution_count": 134,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 1844 entries, 0 to 787\n",
            "Data columns (total 35 columns):\n",
            " #   Column                           Non-Null Count  Dtype \n",
            "---  ------                           --------------  ----- \n",
            " 0   school1                          1844 non-null   int64 \n",
            " 1   major type                       1844 non-null   int64 \n",
            " 2   major1_1                         1844 non-null   int64 \n",
            " 3   major1_2                         1844 non-null   int64 \n",
            " 4   major_data                       1844 non-null   int64 \n",
            " 5   job                              1844 non-null   int64 \n",
            " 6   re_registration                  1844 non-null   int64 \n",
            " 7   contest_award                    1844 non-null   int64 \n",
            " 8   nationality                      1844 non-null   int64 \n",
            " 9   inflow_route                     1844 non-null   int64 \n",
            " 10  whyBDA                           1844 non-null   int64 \n",
            " 11  what_to_gain                     1844 non-null   int64 \n",
            " 12  hope_for_group                   1844 non-null   int64 \n",
            " 13  major_field                      1844 non-null   int64 \n",
            " 14  desired_career_path              1844 non-null   int64 \n",
            " 15  completed_semester               1731 non-null   object\n",
            " 16  project_type                     1844 non-null   int64 \n",
            " 17  time_input                       1844 non-null   int64 \n",
            " 18  desired_job                      1844 non-null   int64 \n",
            " 19  certificate_acquisition          1844 non-null   int64 \n",
            " 20  desired_certificate              1844 non-null   int64 \n",
            " 21  certificate_study_period         1844 non-null   int64 \n",
            " 22  desired_job_except_data          1844 non-null   int64 \n",
            " 23  incumbents_level                 1844 non-null   int64 \n",
            " 24  incumbents_lecture               1844 non-null   int64 \n",
            " 25  incumbents_company_level         1844 non-null   int64 \n",
            " 26  incumbents_lecture_type          1844 non-null   int64 \n",
            " 27  incumbents_lecture_scale         1844 non-null   int64 \n",
            " 28  incumbents_lecture_scale_reason  1844 non-null   int64 \n",
            " 29  interested_company               1844 non-null   int64 \n",
            " 30  expected_domain                  1844 non-null   int64 \n",
            " 31  contest_participitation          1844 non-null   int64 \n",
            " 32  idea_contest                     1844 non-null   int64 \n",
            " 33  onedayclass_topic                1844 non-null   int64 \n",
            " 34  withdrawal                       1844 non-null   int64 \n",
            "dtypes: int64(34), object(1)\n",
            "memory usage: 518.6+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def split_semester(x):\n",
        "    if x == \"대학교 이수학기 5학기 이상\":\n",
        "        return 5.0\n",
        "    elif x == \"대학교 이수학기 4학기 이하\":\n",
        "        return 4.0\n",
        "    else:\n",
        "        return x\n",
        "\n",
        "full_df[\"completed_semester\"] = full_df[\"completed_semester\"].apply(lambda x: split_semester(x))"
      ],
      "metadata": {
        "id": "JRuPpWygwHek"
      },
      "execution_count": 135,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_df = full_df[full_df[\"withdrawal\"] != 2]\n",
        "test_df = full_df[full_df[\"withdrawal\"] == 2]"
      ],
      "metadata": {
        "id": "QlS7n8K-y2xl"
      },
      "execution_count": 136,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(train_df.drop([\"withdrawal\"], axis=1), train_df[\"withdrawal\"], test_size=0.2, shuffle=True, random_state=42)\n",
        "X_train.shape, X_test.shape, y_train.shape, y_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xgGT096zzTiO",
        "outputId": "668a162e-d883-42c8-ec7a-13febd05a731"
      },
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((844, 34), (212, 34), (844,), (212,))"
            ]
          },
          "metadata": {},
          "execution_count": 137
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Model Train"
      ],
      "metadata": {
        "id": "qbMYgaS1zMtm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "xgb_clf = XGBClassifier()\n",
        "xgb_clf.fit(train_df.drop([\"withdrawal\"], axis=1), train_df[\"withdrawal\"])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 254
        },
        "id": "o703NHBDzLY1",
        "outputId": "573f3241-79e9-4b76-98ea-26f41db93000"
      },
      "execution_count": 148,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
              "              colsample_bylevel=None, colsample_bynode=None,\n",
              "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "              enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "              gamma=None, grow_policy=None, importance_type=None,\n",
              "              interaction_constraints=None, learning_rate=None, max_bin=None,\n",
              "              max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "              max_delta_step=None, max_depth=None, max_leaves=None,\n",
              "              min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "              multi_strategy=None, n_estimators=None, n_jobs=None,\n",
              "              num_parallel_tree=None, random_state=None, ...)"
            ],
            "text/html": [
              "<style>#sk-container-id-5 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: #000;\n",
              "  --sklearn-color-text-muted: #666;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-5 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-5 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-5 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: flex;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "  align-items: start;\n",
              "  justify-content: space-between;\n",
              "  gap: 0.5em;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 label.sk-toggleable__label .caption {\n",
              "  font-size: 0.6rem;\n",
              "  font-weight: lighter;\n",
              "  color: var(--sklearn-color-text-muted);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-5 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-5 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-5 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-5 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 0.5em;\n",
              "  text-align: center;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-5 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
              "              colsample_bylevel=None, colsample_bynode=None,\n",
              "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "              enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "              gamma=None, grow_policy=None, importance_type=None,\n",
              "              interaction_constraints=None, learning_rate=None, max_bin=None,\n",
              "              max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "              max_delta_step=None, max_depth=None, max_leaves=None,\n",
              "              min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "              multi_strategy=None, n_estimators=None, n_jobs=None,\n",
              "              num_parallel_tree=None, random_state=None, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>XGBClassifier</div></div><div><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
              "              colsample_bylevel=None, colsample_bynode=None,\n",
              "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "              enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "              gamma=None, grow_policy=None, importance_type=None,\n",
              "              interaction_constraints=None, learning_rate=None, max_bin=None,\n",
              "              max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "              max_delta_step=None, max_depth=None, max_leaves=None,\n",
              "              min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "              multi_strategy=None, n_estimators=None, n_jobs=None,\n",
              "              num_parallel_tree=None, random_state=None, ...)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "preds = xgb_clf.predict(X_test)"
      ],
      "metadata": {
        "id": "N7KCIE5Jz2BM"
      },
      "execution_count": 149,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "f1_score(y_test, preds)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S6Xp3_Msz6tM",
        "outputId": "a88194e5-a942-4c9f-9b68-8d3cb7ef7782"
      },
      "execution_count": 150,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.0"
            ]
          },
          "metadata": {},
          "execution_count": 150
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Predict"
      ],
      "metadata": {
        "id": "xh3CzCzW0Vev"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "preds = xgb_clf.predict(test_df.drop([\"withdrawal\"], axis=1))"
      ],
      "metadata": {
        "id": "DkVZj1h60AKc"
      },
      "execution_count": 151,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "preds"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6LysOY070as3",
        "outputId": "ecfe161b-51fa-4bb1-fd7a-a52713a136ed"
      },
      "execution_count": 152,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1,\n",
              "       1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1])"
            ]
          },
          "metadata": {},
          "execution_count": 152
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "submit_df[\"withdrawal\"] = preds"
      ],
      "metadata": {
        "id": "edjFrcsw0bk3"
      },
      "execution_count": 153,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "submit_df.to_csv(\"/content/gdrive/MyDrive/Colab Notebooks/z.대회 & 프로젝트/데이콘 x BDA 학습자 수료 예측 AI 경진대회_DACON/submit_file/base1.csv\", index=False)"
      ],
      "metadata": {
        "id": "UXsQVl-x0vGf"
      },
      "execution_count": 154,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "eT7SwRV702rH"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}